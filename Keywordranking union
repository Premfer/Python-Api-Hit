SELECT * FROM (
    SELECT 
        t.searchValue,
        t.searchDate,
        t.engine,
        t.device,
        t.searchRank,
        t.SEARCHRESULTTYPE,
        t.searchURL,
        t.avgSearchVolume,
        t.s3_file_name,
        t.s3_file_row
    FROM 
    (
        SELECT 
            m.name AS searchValue,
            m."date" AS searchDate,
            CAST(m.engine AS VARCHAR(20)) AS engine,
            m.device AS device,
            c.value:landingPage::VARCHAR AS searchURL,
            c.value:competitorName::VARCHAR(100) AS Competitors,
            NULL AS avgSearchVolume,
            m.s3_file_name AS s3_file_name,
            m.s3_file_row AS s3_file_row
        FROM dacq_exp.target.seoclarity_main m,
            LATERAL FLATTEN(input => parse_json(m.competitors):competitor) AS c
    ) t
    Left JOIN (
        SELECT
            k.name AS searchValue,
            k."date" AS searchDate,
            k.engine AS engine,
            k.device AS device,
            r.value:trueRank::VARCHAR AS searchRank,
            r.value:url::VARCHAR AS searchURL,
            r.value:type::VARCHAR AS SEARCHRESULTTYPE
        FROM dacq_exp.target.seoclarity_keywordranking_main k,
            LATERAL FLATTEN(input => parse_json(k.rankings)) AS r
    ) p
    ON t.searchURL = p.searchURL  and t.searchDate=p.searchDate and p.engine=t.engine and p.device=t.device-- Make sure this is the correct condition
) u

UNION ALL

SELECT
    name,
    "date",
    engine,
    device,
    highestTrueRank,
    NULL,
    highestRankUrl,
    avgSearchVolume,
    s3_file_name,
    s3_file_row
FROM dacq_exp.target.seoclarity_main;
